// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using StockService.Data;

#nullable disable

namespace StockService.Migrations
{
    [DbContext(typeof(StockDbContext))]
    partial class StockDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("StockService.Data.Entities.Stock", b =>
                {
                    b.Property<Guid>("StockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Available")
                        .HasColumnType("integer");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<uint>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid")
                        .HasColumnName("xmin");

                    b.HasKey("StockId");

                    b.ToTable("Stocks");

                    b.HasData(
                        new
                        {
                            StockId = new Guid("3e44d199-0bed-4213-9518-f0c5fa29867b"),
                            Available = 1200,
                            ProductId = new Guid("2aceae56-c4ef-4bd3-bd8f-879b93288cd1"),
                            UpdatedAt = new DateTimeOffset(new DateTime(2023, 4, 24, 12, 14, 1, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            Version = 0u
                        },
                        new
                        {
                            StockId = new Guid("80210541-59fb-41a3-af1b-cce95c06c829"),
                            Available = 10,
                            ProductId = new Guid("515718c9-4f7f-4014-9b54-8cd3c32e08d9"),
                            UpdatedAt = new DateTimeOffset(new DateTime(2023, 4, 24, 12, 20, 1, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            Version = 0u
                        },
                        new
                        {
                            StockId = new Guid("76d69803-9226-4b42-87a0-088f29ef6079"),
                            Available = 0,
                            ProductId = new Guid("c3d7bb4d-7c63-4ede-b6c9-365c362e884c"),
                            UpdatedAt = new DateTimeOffset(new DateTime(2023, 4, 24, 12, 45, 1, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            Version = 0u
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
